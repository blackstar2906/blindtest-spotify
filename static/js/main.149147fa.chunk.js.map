{"version":3,"sources":["images/logo.svg","components/AlbumCover.js","components/MusicButton.js","utils.js","components/MainPage.js","images/loading.svg","components/LoadingPage.js","App.js","index.js","App.module.css","components/Button.module.css"],"names":["AlbumCover","props","src","track","album","images","url","style","width","height","alt","Button","className","styles","button","onClick","children","MusicButton","name","artists","getRandomNumber","x","Math","floor","random","MainPage","useState","tracks","currentTrack","options","array","counter","length","index","temp","shuffleArray","updateSong","setCurrentTrack","console","log","logo","appLogo","audioContainer","controls","autoPlay","preview_url","coverContainer","map","id","swal","then","LoadingPage","useEffect","fetch","method","headers","Authorization","response","json","data","filtred_data","items","filter","setTracks","setSongLoaded","loading","appTitle","App","songLoaded","app","appHeader","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4OAAe,MAA0B,iC,OCK1BA,EALI,SAAAC,GACjB,IAAMC,EAAMD,EAAME,MAAMC,MAAMC,OAAO,GAAGC,IACxC,OAAO,qBAAKJ,IAAKA,EAAKK,MAAO,CAAEC,MAAO,IAAKC,OAAQ,KAAOC,IAAI,W,gBCC1DC,EAAS,SAAAV,GAAK,OAClB,wBAAQW,UAAWC,IAAOC,OAAQC,QAASd,EAAMc,QAAjD,SACGd,EAAMe,YAgBIC,EAZK,SAAAhB,GAClB,OAAO,mCACL,eAAC,EAAD,CAAQc,QAASd,EAAMc,QAAvB,UACE,cAAC,EAAD,CAAYZ,MAAOF,EAAME,QACzB,gCACE,4BAAIF,EAAME,MAAMe,OAChB,4BAAIjB,EAAME,MAAMgB,QAAQ,GAAGD,gBCd5B,SAASE,EAAgBC,GAC9B,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,GCKpC,IAmCeI,EAnCE,SAAAxB,GACf,MAAiByB,mBAASzB,EAAM0B,QAAzBA,EAAP,oBACA,EAAuBD,mBAASzB,EAAM2B,cAA/BA,EAAP,oBAIMC,EDRD,SAAsBC,GAG3B,IAFA,IAAIC,EAAUD,EAAME,OAEbD,EAAU,GAAG,CAClB,IAAIE,EAAQb,EAAgBW,GAExBG,EAAOJ,IADXC,GAEAD,EAAMC,GAAWD,EAAMG,GACvBH,EAAMG,GAASC,EAGjB,OAAOJ,ECHSK,CAAa,CAFhBR,EAAOP,EAAgBO,EAAOK,SAAS7B,MACvCwB,EAAOP,EAAgBO,EAAOK,SAAS7B,MACVyB,IAUpCQ,EAAa,WACjBnC,EAAMoC,gBAAgBV,EAAOP,EAAgBO,EAAOK,SAAS7B,OAC7DmC,QAAQC,IAAIX,EAAaV,MACzBoB,QAAQC,IAAI,cAGd,OAAO,qCACL,qBAAKrC,IAAKsC,EAAM5B,UAAWC,IAAO4B,QAAS/B,IAAI,SAC/C,qBAAKE,UAAWC,IAAO6B,eAAvB,SACE,uBAAOC,UAAQ,EAACC,UAAQ,EAAC1C,IAAK0B,EAAaiB,gBAE7C,qBAAKjC,UAAWC,IAAOiC,eAAvB,SACGjB,EAAQkB,KAAI,SAAA5C,GAAK,OAChB,cAAC,EAAD,CAAaA,MAAOA,EAAOY,QAAS,kBArBtBiC,EAqBwC7C,EAAM6C,QApB5DpB,EAAaoB,KAAOA,EACtBC,IAAK,UAAW,qCAAsC,WAAWC,KAAKd,GAEtEa,IAAK,eAAU,kDAA6C,UAJ5C,IAAAD,cCfP,MAA0B,oCC+B1BG,EA1BK,SAAAlD,GAmBlB,OAlBAmD,qBAAU,WACRC,MAAM,qEAAsE,CAC1EC,OAAQ,MACRC,QAAS,CACPC,cAAe,yLAGhBN,MAAK,SAAAO,GAAQ,OAAIA,EAASC,UAC1BR,MAAK,SAAAS,GACJrB,QAAQC,IAAI,wDAA6CoB,GACzD,IAAMC,EAAeD,EAAKE,MAAMC,QAAO,SAAA3D,GAAK,OAAgC,OAA5BA,EAAMA,MAAM0C,eAC5DP,QAAQC,IAAI,oCAA+BqB,GAC3C3D,EAAM8D,UAAUH,GAChB3D,EAAMoC,gBAAgBuB,EAAaxC,EAAgBwC,EAAa5B,SAAS7B,OACzEF,EAAM+D,eAAc,QAEvB,IAEI,qCACL,qBAAK9D,IAAK+D,EAASrD,UAAWC,IAAO4B,QAAS/B,IAAI,YAClD,oBAAIE,UAAWC,IAAOqD,SAAtB,wCACA,oBAAItD,UAAWC,IAAOqD,SAAtB,8BCPWC,EAfH,WACV,MAA4BzC,mBAAS,IAArC,mBAAOC,EAAP,KAAeoC,EAAf,KACA,EAAoCrC,oBAAS,GAA7C,mBAAO0C,EAAP,KAAmBJ,EAAnB,KACA,EAAwCtC,mBAAS,MAAjD,mBAAOE,EAAP,KAAqBS,EAArB,KAEA,OACE,qBAAKzB,UAAWC,IAAOwD,IAAvB,SACE,wBAAQzD,UAAWC,IAAOyD,UAA1B,SACGF,EAAa,cAAC,EAAD,CAAUzC,OAAQA,EAAQC,aAAcA,EAAcS,gBAAiBA,IACjF,cAAC,EAAD,CAAa0B,UAAWA,EAAW1B,gBAAiBA,EAAiB2B,cAAeA,SCThGO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,qBAAqB,YAAc,yBAAyB,UAAY,uBAAuB,QAAU,qBAAqB,eAAiB,4BAA4B,eAAiB,8B,kBCA/OD,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.149147fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.53a8fc10.svg\";","const AlbumCover = props => {\n  const src = props.track.album.images[0].url\n  return <img src={src} style={{ width: 200, height: 200 }} alt=\"cover\" />\n}\n\nexport default AlbumCover\n","import AlbumCover from \"./AlbumCover\"\r\nimport styles from \"./Button.module.css\"\r\n\r\nconst Button = props => (\r\n  <button className={styles.button} onClick={props.onClick}>\r\n    {props.children}\r\n  </button>\r\n)\r\n\r\nconst MusicButton = props => {\r\n  return <>\r\n    <Button onClick={props.onClick}>\r\n      <AlbumCover track={props.track}></AlbumCover>\r\n      <div>\r\n        <p>{props.track.name}</p>\r\n        <p>{props.track.artists[0].name}</p>\r\n      </div>\r\n    </Button>\r\n  </>\r\n}\r\n\r\nexport default MusicButton","/* Return a random number between 0 included and x excluded */\nexport function getRandomNumber(x) {\n  return Math.floor(Math.random() * x)\n}\n\nexport function shuffleArray(array) {\n  let counter = array.length\n\n  while (counter > 0) {\n    let index = getRandomNumber(counter)\n    counter--\n    let temp = array[counter]\n    array[counter] = array[index]\n    array[index] = temp\n  }\n\n  return array\n}\n","import styles from \"../App.module.css\"\r\nimport swal from \"sweetalert\"\r\nimport logo from \"../images/logo.svg\"\r\nimport MusicButton from \"./MusicButton\"\r\nimport { useState } from \"react\"\r\nimport { shuffleArray, getRandomNumber } from \"../utils\"\r\n\r\nconst MainPage = props => {\r\n  const [tracks] = useState(props.tracks)\r\n  const [currentTrack] = useState(props.currentTrack)\r\n\r\n  const opt1 = tracks[getRandomNumber(tracks.length)].track\r\n  const opt2 = tracks[getRandomNumber(tracks.length)].track\r\n  const options = shuffleArray([opt1, opt2, currentTrack])\r\n\r\n  const checkAnswer = id => {\r\n    if (currentTrack.id === id) {\r\n      swal(\"Bravo !\", \"Vous avez trouvez la bonne musique\", \"success\").then(updateSong)\r\n    } else {\r\n      swal(\"Désolé\", \"Ce n'étais pas la bonne musique, réessaye\", \"error\")\r\n    }\r\n  }\r\n\r\n  const updateSong = () => {\r\n    props.setCurrentTrack(tracks[getRandomNumber(tracks.length)].track)\r\n    console.log(currentTrack.name)\r\n    console.log(\"next song\")\r\n  }\r\n\r\n  return <>\r\n    <img src={logo} className={styles.appLogo} alt=\"logo\" />\r\n    <div className={styles.audioContainer}>\r\n      <audio controls autoPlay src={currentTrack.preview_url}></audio>\r\n    </div>\r\n    <div className={styles.coverContainer}>\r\n      {options.map(track => (\r\n        <MusicButton track={track} onClick={() => checkAnswer(track.id)}></MusicButton>\r\n      ))}\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default MainPage","export default __webpack_public_path__ + \"static/media/loading.6e6379f4.svg\";","import styles from \"../App.module.css\"\r\nimport loading from \"../images/loading.svg\"\r\nimport { getRandomNumber } from \"../utils\"\r\nimport { useEffect } from \"react\"\r\n\r\nconst LoadingPage = props => {\r\n  useEffect(() => {\r\n    fetch(\"https://api.spotify.com/v1/playlists/0MF1XGKzqqeL0ZHeqMrq7R/tracks\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + process.env.REACT_APP_API_TOKEN,\r\n      },\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"Réponse reçue ! Voilà ce que j'ai reçu : \", data)\r\n        const filtred_data = data.items.filter(track => track.track.preview_url !== null)\r\n        console.log(\"Voila les résultats filtrés\", filtred_data)\r\n        props.setTracks(filtred_data)\r\n        props.setCurrentTrack(filtred_data[getRandomNumber(filtred_data.length)].track)\r\n        props.setSongLoaded(true)\r\n      })\r\n  }, [])\r\n\r\n  return <>\r\n    <img src={loading} className={styles.appLogo} alt=\"loading\" />\r\n    <h1 className={styles.appTitle}>Bienvenue sur le Blindtest</h1>\r\n    <h2 className={styles.appTitle}>Loading data</h2>\r\n  </>\r\n}\r\n\r\nexport default LoadingPage","import styles from \"./App.module.css\"\nimport MainPage from \"./components/MainPage\"\nimport LoadingPage from \"./components/LoadingPage\"\nimport { useState } from \"react\"\n\nconst App = () => {\n  const [tracks, setTracks] = useState([])\n  const [songLoaded, setSongLoaded] = useState(false)\n  const [currentTrack, setCurrentTrack] = useState(null)\n\n  return (\n    <div className={styles.app}>\n      <header className={styles.appHeader}>\n        {songLoaded ? <MainPage tracks={tracks} currentTrack={currentTrack} setCurrentTrack={setCurrentTrack}></MainPage>\n          : <LoadingPage setTracks={setTracks} setCurrentTrack={setCurrentTrack} setSongLoaded={setSongLoaded}></LoadingPage>}\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./global.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"appLogo\":\"App_appLogo__1qg7-\",\"appLogoSpin\":\"App_appLogoSpin__P7gwA\",\"appHeader\":\"App_appHeader__28RXF\",\"appLink\":\"App_appLink__2pA8F\",\"coverContainer\":\"App_coverContainer__1S7j2\",\"audioContainer\":\"App_audioContainer__36hu8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2Ce79\"};"],"sourceRoot":""}